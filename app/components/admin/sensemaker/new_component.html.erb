<%= header %>

<% selected_query_type = params[:query_type] || "Legislation::Process" %>

<div class="sensemaker">
  <div class="search-control">
    <div class="flex-row">
      <% @query_types.each do |type| %>
        <% selected = (selected_query_type == type) %>
        <%= link_to new_admin_sensemaker_job_path(query_type: type, query: params[:query]), class: "query-type-tab #{"active" if selected}" do %>
          <span><%= I18n.t("activerecord.models.#{type.underscore}.other") %></span>
        <% end %>
      <% end %>
    </div>

    <%= form_tag new_admin_sensemaker_job_path, class: "", method: :get do %>
      <% conversation = @sensemaker_job.conversation if @sensemaker_job.analysable_type.present? %>
      <% unless conversation&.target.present? %>
        <p>Select a target from the results <%= link_to "or analyse all proposals", new_admin_sensemaker_job_path(target_type: "Proposal", target_id: nil), class: "bold" if selected_query_type.eql?("Proposal") %>.</p>
      <% end %>

      <div class="target-search-group">
        <%= hidden_field_tag :query_type, selected_query_type %>
        <% model_label = I18n.t("activerecord.models.#{(selected_query_type || "Legislation::Process").underscore}.other", default: "targets") %>
        <%= text_field_tag :query, params[:query], placeholder: "Search for #{model_label}..." %>
        <%= submit_tag "Search", class: "success button" %>
      </div>

      <details <% unless params[:target_type].present? %> open<% end %>>
        <summary>
          <%= @result_count %> results
        </summary>
        <ul class="target-search-results">
          <% if @search_results.blank? %>
            <%= content_tag :span, "No results found.", class: "small italic" %>
            &nbsp;
            <%= link_to "Clear search", new_admin_sensemaker_job_path(query_type: selected_query_type), class: "small italic" %>
          <% end %>

          <% @search_results.each do |result_group| %>
            <%= render Admin::Sensemaker::ResultComponent.new(
                  result_group: result_group,
                  selected_query_type: selected_query_type
                ) %>
          <% end %>
        </ul>
      </details>
    <% end %>
  </div>

  <% conversation = @sensemaker_job.conversation if @sensemaker_job.analysable_type.present? %>
  <% if conversation&.target.present? || (conversation&.target.is_a?(Class) && conversation.target == Proposal) %>
    <br>
    <%= form_for @sensemaker_job, url: admin_sensemaker_jobs_path, method: :post do |f| %>
      <%= f.hidden_field :analysable_type, label: false, required: true %>
      <%= f.hidden_field :analysable_id, label: false, required: false %>

      <h4>Analysing <%= conversation.target_label(format: :short) %></h4>
      <p>Review the additional context, then select a script to run.</p>

      <%= f.text_area :additional_context, label: "Additional context", rows: 10 %>

      <% script_options = Sensemaker::JobRunner::SCRIPTS.map { |script| [I18n.t("sensemaker.scripts.#{script.parameterize.underscore}.title"), script] } %>
      <%= f.select :script, script_options, include_blank: "Select a script...", required: true %>

      <div class="flex-between">
        <%= link_to "← Cancel", admin_sensemaker_jobs_path, class: "" %>

        <div>
          <%= f.submit "Download input CSV",
                       type: "submit",
                       formaction: preview_admin_sensemaker_jobs_path(format: :csv),
                       class: "button", data: { temp_disable: true, disable_with: false } %>
          <%= f.submit "Run", data: { temp_disable: true, disable_with: false } %>
        </div>
      </div>
    <% end %>
  <% end %>
</div>
